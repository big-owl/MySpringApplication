buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.bmuschko:gradle-tomcat-plugin:2.4.2'
  }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'

ext {
  logbackVersion = '1.2.3'
  springVersion = '5.1.5.RELEASE'
  tomcatVersion = '9.0.16'
}

repositories {
  mavenCentral()
}

dependencies {
  compile("ch.qos.logback:logback-classic:${logbackVersion}")
  compile("ch.qos.logback:logback-core:${logbackVersion}")
  compile("com.fasterxml.jackson.core:jackson-databind:2.9.8")
  compile("javax.servlet:javax.servlet-api:3.1.0")
  compile("javax.validation:validation-api:2.0.1.Final")
  // Spring uses jakarta commons logging (jcl), so we need to use the jcl-over-slf4j bridge
  // to make spring think it's using jcl.
  compile("org.slf4j:jcl-over-slf4j:1.7.25")
  compile("org.slf4j:slf4j-api:1.7.25")
  compile("org.springframework:spring-core:${springVersion}")
  compile("org.springframework:spring-web:${springVersion}")
  compile("org.springframework:spring-webmvc:${springVersion}")
  compile("org.springframework:spring-test:${springVersion}")

  compile('javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.2') {
    transitive = false
  }

  configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
  }

  testImplementation 'org.junit.jupiter:junit-jupiter:5.4.0'
  testImplementation 'org.hamcrest:hamcrest:2.1'
  
  testCompile 'org.slf4j:jcl-over-slf4j:1.7.25'
  
  tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
      "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

test {
  useJUnitPlatform()
  testLogging{
    events "passed", "skipped", "failed"
  }
}

tomcat {
  httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
  ajpProtocol = 'org.apache.coyote.ajp.AjpNio2Protocol'
  contextPath = 'application'
}

// The application plugin needs to know the main class for when it bundles the application.
mainClassName = 'com.app.client.Application'
